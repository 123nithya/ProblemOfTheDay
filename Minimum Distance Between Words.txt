/*
 Minimum Distance Between Words [AMAZON]

A string S is passed as the input. Two words W1 and W2 which are present in the string S are also passed as the input.
 The program must find the minimum distance D between W1 and W2 in S (in forward or reverse order) and print D as the output.

Input Format:
The first line will contain S.
The second line will contain W1.
The third line will contain W2.

Output Format:
The first line will contain D - the minimum distance between W1 and W2 in S.

Boundary Conditions:
Length of S is from 5 to 200.

Example Input/Output 1:
Input:
the brown quick frog quick the
the
quick

Output:
1
Explanation:
quick and the are adjacent as the last two words.
 Hence distance between them is 1.

Example Input/Output 2:

Input:
the quick the brown quick brown the frog
quick
frog
Output:
3
*/

SOLUTION:

import java.util.*;
class Main{
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        String str = sc.nextLine();
        String ch[] = str.split(" ");
        String w1 = sc.nextLine();
        String w2 = sc.nextLine();
        int idx1=-1,idx2=-1;
        int min = Integer.MAX_VALUE;
        int temp = 0;
        for(int i=0;i<ch.length;i++)
        {
            if(w1.equals(w2))
            {
                if(ch[i].equals(w1))
                {
                    idx1 = i;
                    for(int j=idx1+1;j<ch.length;j++)
                    {
                        if(ch[j].equals(w2))
                        {
                            idx2 = j;
                            break;
                        }
                        else
                        {
                            idx2 = 0;
                            break;
                        }
                    }
                }
                if(idx1!=-1 && idx2!=-1)
                {
                    temp = (int)Math.abs(idx1-idx2);
                    if(temp<min)
                    {
                        min = temp;
                    }
                }
            }
            else
            {
                if(ch[i].equals(w1))
                {
                    idx1 = i;
                }
                if(ch[i].equals(w2))
                {
                    idx2 = i;
                }
                if(idx1!=-1 && idx2!=-1)
                {
                    temp = (int)Math.abs(idx1-idx2);
                    if(temp<min)
                    {
                        min = temp;
                    }
                }
            }
        }
        System.out.print(min);
    }
}