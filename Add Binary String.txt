/*
	Problem statement
You have been given two binary strings ‘A’ and ‘B’. Your task is to find the sum of both strings in the form of a binary string.

Binary strings are the representation of integers in the binary form. For example, the binary strings of 9 and 16 are “1001” and “10000” respectively.

Detailed explanation ( Input/output format, Notes, Images )
Constraints:
1 <= T <= 5
1 <= N, M <= 5000

‘A’ and ‘B’ consist only of '0' or '1' characters.

Each string does not contain leading zeros except for the zero itself.

Sample Input 1:
2
2 2
10 01
3 2
111 10

Sample Output 1:
11
1001

Explanation of sample input 1:
In the first test case, the first string is “10” which is 2 in the decimal format, and the second string is “01” which is 1 in the decimal format. So, 2 + 1 = 3, which is represented as “11” in binary form.

In the first test case, the first string is “111” which is 7 in the decimal format, and the second string is “10” which is 2 in the decimal format. So, 7 + 2 = 9, which is represented as “1001” in binary form.

Sample Input 2:
2
3 1
111 0
1 1
1 1

Sample Output 2:
111
10

Explanation for sample input 2:
In the first test case, the first string is “111” which is 7 in the decimal format, and the second string is “0” which is 0 in the decimal format. So, 7 + 0 = 0, which is represented as “111” in binary form.

In the first test case, the first string is “1” which is 1 in the decimal format and the second string is “1” which is 1 in the decimal format. So, 1 + 1 = 2, which is represented as “10” in binary form.
*/


SOLUTION:
import java.util.*;
class Main
{
	public static void main(String[] args)
	{
		String a = sc.nextLine();
		String b = sc.nextLine();
		System.out.print(binarySum(a,b));
	}
	public static String binarySum(String a,String b)
	{
		int num1 = Integer.parseInt(a,2);
		int num2 = Integer.parseInt(b,2);
		int sum = num1+num2;
		String result = Integer.toBinaryString(sum);
		return result;
	}
}